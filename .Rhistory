count(y)
nrow(y)
n(y)
tally(y)
y <- d_town$herb
dens(y)
quantile(y, 0.6)
y_avg
q75(y_avg)
y_avg <- d_town$avg_herb
q75(y_avg)
quantile(y_avg, 0.95)
y_avg
q75 <- function(y) quantile(y, 0.75)
ppc_stat(y_avg, y_rep6.2, stat = "q95", binwidth = 1) + ggtitle("Maximum m6.2 estimates")
ppc_stat(y_avg, y_rep6.2, stat = "q95", binwidth = 3) + ggtitle("Maximum m6.2 estimates")
ppc_stat(y_avg, y_rep6.2, stat = "q95", binwidth = 0.01) + ggtitle("Maximum m6.2 estimates")
ppc_stat(y_avg, y_rep6.2, stat = "q95", binwidth = 0.1) + ggtitle("Maximum m6.2 estimates")
ppc_stat(y_avg, y_rep6.2, stat = "q95", bins = 30) + ggtitle("Maximum m6.2 estimates")
ppc_stat(y_avg, y_rep6.2, stat = "q95", bins = 20) + ggtitle("Maximum m6.2 estimates")
ppc_stat(y_avg, y_rep6.2, stat = "q95", binwidth = 0.5) + ggtitle("Maximum m6.2 estimates")
ppc_stat(y_avg, y_rep6.2, stat = "q75", binwidth = 0.5) + ggtitle("Maximum m6.2 estimates")
q75 <- function(y) quantile(y, 0.75)
ppc_stat(y_avg, y_rep6.2, stat = "q75", binwidth = 0.5) + ggtitle("Maximum m6.2 estimates")
ppc_stat(y_avg, y_rep7.2, stat = "max", binwidth = 1) + ggtitle("Maximum m7.2 estimates")
q95 <- function(y) quantile(y, 0.95)
ppc_stat(y_avg, y_rep6.2, stat = "q95", binwidth = 0.5) + ggtitle("Maximum m6.2 estimates")
ppc_stat(y_avg, y_rep7.2, stat = "q95", binwidth = 1) + ggtitle("Maximum m7.2 estimates")
q95 <- function(y) quantile(y, 0.95)
ppc_stat(y_avg, y_rep6.2, stat = "q95", binwidth = 0.5) + ggtitle("Maximum m6.2 estimates")
ppc_stat(y_avg, y_rep7.2, stat = "q95", binwidth = 0.5) + ggtitle("Maximum m7.2 estimates")
grid.arrange(stat_m6.2, stat_m7.2, nrow = 2)
q95 <- function(y) quantile(y, 0.95)
stat_m6.2 <- ppc_stat(y_avg, y_rep6.2, stat = "q95", binwidth = 0.5) + ggtitle("Maximum m6.2 estimates")
stat_m7.2 <- ppc_stat(y_avg, y_rep7.2, stat = "q95", binwidth = 0.5) + ggtitle("Maximum m7.2 estimates")
grid.arrange(stat_m6.2, stat_m7.2, nrow = 2)
q95 <- function(y) quantile(y, 0.95)
stat_m6.2 <- ppc_stat(y_avg, y_rep6.2, stat = "max", binwidth = 0.5) + ggtitle("Maximum m6.2 estimates")
stat_m7.2 <- ppc_stat(y_avg, y_rep7.2, stat = "q95", binwidth = 0.5) + ggtitle("Maximum m7.2 estimates")
grid.arrange(stat_m6.2, stat_m7.2, nrow = 2)
q95 <- function(y) quantile(y, 0.95)
stat_m6.2 <- ppc_stat(y_avg, y_rep6.2, stat = "max", binwidth = 0.5) + ggtitle("Maximum m6.2 estimates")
stat_m7.2 <- ppc_stat(y_avg, y_rep7.2, stat = "max", binwidth = 0.5) + ggtitle("Maximum m7.2 estimates")
grid.arrange(stat_m6.2, stat_m7.2, nrow = 2)
q95 <- function(y) quantile(y, 0.95)
stat_m6.2 <- ppc_stat(y_avg, y_rep6.2, stat = "max", binwidth = 0.1) + ggtitle("Maximum m6.2 estimates")
stat_m7.2 <- ppc_stat(y_avg, y_rep7.2, stat = "max", binwidth = 0.1) + ggtitle("Maximum m7.2 estimates")
grid.arrange(stat_m6.2, stat_m7.2, nrow = 2)
q95 <- function(y) quantile(y, 0.95)
stat_m6.2 <- ppc_stat(y, y_rep6.2, stat = "max", binwidth = 0.1) + ggtitle("Maximum m6.2 estimates")
stat_m7.2 <- ppc_stat(y, y_rep7.2, stat = "max", binwidth = 0.1) + ggtitle("Maximum m7.2 estimates")
grid.arrange(stat_m6.2, stat_m7.2, nrow = 2)
q95 <- function(y) quantile(y, 0.95)
stat_m6.2 <- ppc_stat(y, y_rep6.2, stat = "max", binwidth = 1) + ggtitle("Maximum m6.2 estimates")
stat_m7.2 <- ppc_stat(y, y_rep7.2, stat = "max", binwidth = 1) + ggtitle("Maximum m7.2 estimates")
grid.arrange(stat_m6.2, stat_m7.2, nrow = 2)
q95 <- function(y) quantile(y, 0.95)
stat_m6.2 <- ppc_stat(y, y_rep6.2, stat = "q95", binwidth = 1) + ggtitle("Maximum m6.2 estimates")
stat_m7.2 <- ppc_stat(y, y_rep7.2, stat = "q95", binwidth = 1) + ggtitle("Maximum m7.2 estimates")
grid.arrange(stat_m6.2, stat_m7.2, nrow = 2)
q95 <- function(y) quantile(y, 0.95)
stat_m6.2 <- ppc_stat(y, y_rep6.2, stat = "q95", binwidth = 0.1) + ggtitle("Maximum m6.2 estimates")
stat_m7.2 <- ppc_stat(y, y_rep7.2, stat = "q95", binwidth = 0.1) + ggtitle("Maximum m7.2 estimates")
grid.arrange(stat_m6.2, stat_m7.2, nrow = 2)
q95 <- function(y) quantile(y, 0.95)
stat_m6.2 <- ppc_stat(y, y_rep6.2, stat = "q95", binwidth = 0.5) + ggtitle("Maximum m6.2 estimates")
stat_m7.2 <- ppc_stat(y, y_rep7.2, stat = "q95", binwidth = 0.5) + ggtitle("Maximum m7.2 estimates")
grid.arrange(stat_m6.2, stat_m7.2, nrow = 2)
stat_m6.2 <- ppc_stat(y, y_rep6.2, stat = "q95", binwidth = 0.1) + ggtitle("Maximum m6.2 estimates")
grid.arrange(stat_m6.2, stat_m7.2, nrow = 2)
q95 <- function(y) quantile(y, 0.95)
stat_m6.2 <- ppc_stat(y, y_rep6.2, stat = "q95", binwidth = 0.1) + ggtitle("Maximum m6.2 estimates")
stat_m7.2 <- ppc_stat(y, y_rep7.2, stat = "q95", binwidth = 0.1) + ggtitle("Maximum m7.2 estimates")
grid.arrange(stat_m6.2, stat_m7.2, nrow = 2)
stat_m6.2 <- ppc_stat(y, y_rep6.2, stat = "q95", binwidth = 0.01) + ggtitle("Maximum m6.2 estimates")
grid.arrange(stat_m6.2, stat_m7.2, nrow = 2)
stat_m6.2 <- ppc_stat(y, y_rep6.2, stat = "q95", binwidth = 0.001) + ggtitle("Maximum m6.2 estimates")
stat_m7.2 <- ppc_stat(y, y_rep7.2, stat = "q95", binwidth = 0.1) + ggtitle("Maximum m7.2 estimates")
grid.arrange(stat_m6.2, stat_m7.2, nrow = 2)
q75 <- function(y) quantile(y, 0.75)
stat_m6.2 <- ppc_stat(y, y_rep6.2, stat = "q75", binwidth = 0.01) + ggtitle("95th percentile m6.2 estimates")
stat_m7.2 <- ppc_stat(y, y_rep7.2, stat = "q95", binwidth = 0.01) + ggtitle("95th percentile m7.2 estimates")
grid.arrange(stat_m6.2, stat_m7.2, nrow = 2)
q75 <- function(y) quantile(y, 0.75)
stat_m6.2 <- ppc_stat(y, y_rep6.2, stat = "q75", binwidth = 0.01) + ggtitle("95th percentile m6.2 estimates")
stat_m7.2 <- ppc_stat(y, y_rep7.2, stat = "q75", binwidth = 0.01) + ggtitle("95th percentile m7.2 estimates")
grid.arrange(stat_m6.2, stat_m7.2, nrow = 2)
q95 <- function(y) quantile(y, 0.95)
stat_m6.2 <- ppc_stat(y, y_rep6.2, stat = "q95", binwidth = 0.01) + ggtitle("95th percentile m6.2 estimates")
stat_m7.2 <- ppc_stat(y, y_rep7.2, stat = "q95", binwidth = 0.01) + ggtitle("95th percentile m7.2 estimates")
grid.arrange(stat_m6.2, stat_m7.2, nrow = 2)
stat1_m6.2 <- ppc_stat(y, y_rep6.2, stat = "max", binwidth = 1) + ggtitle("Maximum m6.2 estimates")
stat1_m7.2 <- ppc_stat(y, y_rep7.2, stat = "max", binwidth = 1) + ggtitle("Maximum m7.2 estimates")
grid.arrange(stat1_m6.2, stat1_m7.2, nrow = 2)
q95 <- function(y) quantile(y, 0.95)
stat_m6.2 <- ppc_stat(y, y_rep6.2, stat = "q95", binwidth = 0.01) + ggtitle("95th percentile m6.2 estimates")
stat_m7.2 <- ppc_stat(y, y_rep7.2, stat = "q95", binwidth = 0.01) + ggtitle("95th percentile m7.2 estimates")
grid.arrange(stat_m6.2, stat_m7.2, nrow = 2)
m8 <- ulam(
alist(
herb ~ dzipois(p_zero, 100, lambda),
logit(lambda) <- a,
logit(p_zero) <- binom_herb[species],
# priors
a ~ dnorm(1, 0.5),
binom_herb[species] ~ dnorm(0, 1.5)
), data = d_town_slim, log_lik = TRUE
)
precis(m8, depth = 2)
knitr::opts_chunk$set(echo = F, warnings = F)
library(rethinking)
library(tidyverse)
library(gridExtra)
library(citr)
library(dagitty)
library(bayesplot)
library(rstanarm)
m8 <- ulam(
alist(
herb ~ dzipois(p_zero, 100, lambda),
logit(lambda) <- a,
logit(p_zero) <- binom_herb[species],
# priors
a ~ dnorm(1, 0.5),
binom_herb[species] ~ dnorm(0, 1.5)
), data = d_town_slim, log_lik = TRUE
)
precis(m8, depth = 2)
m8.1 <- ulam(
alist(
herb ~ dzipois(p_zero, 100, lambda),
logit(lambda) <- a + b[species],
logit(p_zero) <- binom_herb[species],
# priors
a ~ dnorm(1, 0.5),
b[species] ~ dnorm(0, 1.5),
binom_herb[species] ~ dnorm(2, 5)
), data = d_town_slim, log_lik = TRUE
)
compare(m1, m1.2, m2, m2.1, m2.2, m2.3)
m8.2 <- ulam(
alist(
herb ~ dzipois(p_zero, 100, lambda),
logit(lambda) <- a + b[species] + g[site] + d[leaf],
logit(p_zero) <- binom_herb[species],
# priors
binom_herb[species] ~ dnorm(2, 5),
a ~ dnorm(1, 0.5),
b[species] ~ dnorm(0, 1.5),
g[site] ~ dnorm(2, 5),
d[leaf] ~ dnorm(2, 5)
), data = d_town_slim, chains = 4, cores = 4,
)
compare(m8, m8.1, m8.2)
m8.2 <- ulam(
alist(
herb ~ dzipois(p_zero, 100, lambda),
logit(lambda) <- a + b[species] + g[site] + d[leaf],
logit(p_zero) <- binom_herb[species],
# priors
binom_herb[species] ~ dnorm(2, 5),
a ~ dnorm(1, 0.5),
b[species] ~ dnorm(0, 1.5),
g[site] ~ dnorm(2, 5),
d[leaf] ~ dnorm(2, 5)
), data = d_town_slim, log_lik = TRUE, chains = 4, cores = 4,
)
compare(m8, m8.1, m8.2)
m8 <- ulam(
alist(
herb ~ dzipois(p_zero, 100, lambda),
logit(lambda) <- b[species],
logit(p_zero) <- binom_herb[species],
# priors
b ~ dnorm(1, 0.5),
binom_herb[species] ~ dnorm(2, 5)
), data = d_town_slim, log_lik = TRUE, chains = 4, cores = 4,
)
m8 <- ulam(
alist(
herb ~ dzipois(p_zero, lambda),
logit(lambda) <- b[species],
logit(p_zero) <- binom_herb[species],
# priors
b ~ dnorm(1, 0.5),
binom_herb[species] ~ dnorm(2, 5)
), data = d_town_slim, log_lik = TRUE, chains = 4, cores = 4,
)
m8 <- ulam(
alist(
herb ~ dzipois(p_zero, 100, lambda),
logit(lambda) <- b[species],
logit(p_zero) <- binom_herb[species],
# priors
b[species] ~ dnorm(1, 0.5),
binom_herb[species] ~ dnorm(2, 5)
), data = d_town_slim, log_lik = TRUE, chains = 4, cores = 4,
)
precis(m8, depth = 2)
inv_logit(1.48)
inv_logit(0.75)
exp(0.99)
precis(m8, depth = 2)
traceplot(m8)
compare(m8, m7.2)
precis_plot(precis(m8, depth = 2))
precis_plot(precis(m8, depth = 2))
# specifically looking at m8
m8_fit <- m8@stanfit
posterior_m8 <- as.matrix(m8_fit)
# plot m8
params <- c(names(m8_fit)[grep("a", names(m8_fit))],
names(m8_fit)[grep("b", names(m8_fit))])
mcmc_areas(
posterior_m8,
pars = params,
prob = 0.8,
prob_outer = 0.999,
point_est = "mean"
) + ggtitle("m8 parameter estimates")
# generate posterior predictions with sim
y_rep8 <- sim(m8, n = 500)
# generate posterior predictions with sim
y_rep8 <- sim(m8$lambda, n = 500)
m8 <- ulam(
alist(
herb ~ dzipois(p_zero, 100, lambda),
logit(lambda) <- b[species] + g[site],
logit(p_zero) <- binom_herb[species] + c[site],
# priors
b[species] ~ dnorm(1, 0.5),
binom_herb[species] ~ dnorm(2, 5),
g[site] ~ dnorm(2, 5),
d[site] ~ dnorm(2, 5)
), data = d_town_slim, log_lik = TRUE, chains = 4, cores = 4,
)
m8 <- ulam(
alist(
herb ~ dzipois(p_zero, 100, lambda),
logit(lambda) <- b[species] + g[site],
logit(p_zero) <- binom_herb[species] + d[site],
# priors
b[species] ~ dnorm(1, 0.5),
binom_herb[species] ~ dnorm(2, 5),
g[site] ~ dnorm(2, 5),
d[site] ~ dnorm(2, 5)
), data = d_town_slim, log_lik = TRUE, chains = 4, cores = 4,
)
citr:::insert_citation()
precis(m8, depth = 2)
traceplot(m8)
precis_plot(precis(m8, depth = 2))
m8 <- ulam(
alist(
herb ~ dzipois(p_zero, 100, lambda),
logit(lambda) <- b[species],
logit(p_zero) <- binom_herb[species],
# priors
b[species] ~ dnorm(1, 0.5),
binom_herb[species] ~ dnorm(2, 5)
), data = d_town_slim, log_lik = TRUE, chains = 4, cores = 4,
)
m8.1 <- ulam(
alist(
herb ~ dzipois(p_zero, 100, lambda),
logit(lambda) <- b[species] + g[site],
logit(p_zero) <- binom_herb[species] + d[site],
# priors
b[species] ~ dnorm(1, 0.5),
binom_herb[species] ~ dnorm(2, 5),
g[site] ~ dnorm(2, 5),
d[site] ~ dnorm(2, 5)
), data = d_town_slim, log_lik = TRUE, chains = 4, cores = 4,
)
compare(m8, m8.1)
m8 <- ulam(
alist(
herb ~ dzipois(p_zero, 100, lambda),
logit(lambda) <- b[species],
logit(p_zero) <- binom_herb[species],
# priors
b[species] ~ dnorm(1, 0.5),
binom_herb[species] ~ dnorm(2, 5)
), data = d_town_slim, log_lik = TRUE, chains = 4, cores = 4,
)
m8.2 <- ulam(
alist(
herb ~ dzipois(p_zero, 100, lambda),
logit(lambda) <- b[species] + g[site] + d[leaf],
logit(p_zero) <- binom_herb[species] + g_binom[site] + d_binom(leaf),
# priors
b[species] ~ dnorm(1, 0.5),
binom_herb[species] ~ dnorm(2, 5),
g[site] ~ dnorm(2, 5),
g_binom[site] ~ dnorm(2, 5),
d[site] ~ dnorm(2, 5),
d_binom[site] ~ dnorm(2, 5)
), data = d_town_slim, log_lik = TRUE, chains = 4, cores = 4,
)
m8.2 <- ulam(
alist(
herb ~ dzipois(p_zero, 100, lambda),
logit(lambda) <- b[species] + g[site] + d[leaf],
logit(p_zero) <- binom_herb[species] + g_binom[site] + d_binom(leaf),
# priors
b[species] ~ dnorm(1, 0.5),
binom_herb[species] ~ dnorm(2, 5),
g[site] ~ dnorm(2, 5),
g_binom[site] ~ dnorm(2, 5),
d[leaf] ~ dnorm(2, 5),
d_binom[leaf] ~ dnorm(2, 5)
), data = d_town_slim, log_lik = TRUE, chains = 4, cores = 4,
)
m8.2 <- ulam(
alist(
herb ~ dzipois(p_zero, 100, lambda),
logit(lambda) <- b[species] + g[site] + d[leaf],
logit(p_zero) <- binom_herb[species] + g_binom[site] + d_binom[leaf],
# priors
b[species] ~ dnorm(1, 0.5),
binom_herb[species] ~ dnorm(2, 5),
g[site] ~ dnorm(2, 5),
g_binom[site] ~ dnorm(2, 5),
d[leaf] ~ dnorm(2, 5),
d_binom[leaf] ~ dnorm(2, 5)
), data = d_town_slim, log_lik = TRUE, chains = 4, cores = 4,
)
compare(m8, m8.1, m8.2)
m8 <- ulam(
alist(
herb ~ dzipois(p_zero, 100, lambda),
logit(lambda) <- b[species] + g[site] + d[leaf],
logit(p_zero) <- binom_herb[species] + g_binom[site] + d_binom[leaf],
# priors
b[species] ~ dnorm(1, 0.5),
binom_herb[species] ~ dnorm(2, 5),
g[site] ~ dnorm(2, 5),
g_binom[site] ~ dnorm(2, 5),
d[leaf] ~ dnorm(2, 5),
d_binom[leaf] ~ dnorm(2, 5)
), data = d_town_slim, log_lik = TRUE, chains = 4, cores = 4,
)
precis(m8, depth = 2)
pars(mfrow = c(1, 2))
precis_plot(precis(m8, depth = 2))
traceplot(m8)
# m8 estimates
m8_fit <- m8@stanfit
posterior_m8 <- as.matrix(m8_fit)
params <- c(names(m8_fit)[grep("a", names(m8_fit))],
names(m8_fit)[grep("b", names(m8_fit))])
mcmc_areas(
posterior_m8,
pars = params,
prob = 0.8,
prob_outer = 0.999,
point_est = "mean"
) + ggtitle("m8 parameter estimates")
m8 <- ulam(
alist(
herb ~ dzipois(p_zero, 100, lambda),
logit(lambda) <- b[species] + d[leaf],
logit(p_zero) <- binom_herb[species] + d_binom[leaf],
# priors
b[species] ~ dnorm(1, 0.5),
binom_herb[species] ~ dnorm(2, 5),
g[site] ~ dnorm(2, 5),
g_binom[site] ~ dnorm(2, 5),
d[leaf] ~ dnorm(2, 5),
d_binom[leaf] ~ dnorm(2, 5)
), data = d_town_slim, log_lik = TRUE, chains = 4, cores = 4,
)
compare(m8, m8.2)
precis(m8, depth = 2)
m8 <- ulam(
alist(
herb ~ dzipois(p_zero, 100, lambda),
logit(lambda) <- b[species] + d[leaf],
logit(p_zero) <- binom_herb[species] + d_binom[leaf],
# priors
b[species] ~ dnorm(1, 0.5),
binom_herb[species] ~ dnorm(2, 5),
d[leaf] ~ dnorm(2, 5),
d_binom[leaf] ~ dnorm(2, 5)
), data = d_town_slim, log_lik = TRUE, chains = 4, cores = 4,
)
compare(m8, m8.2)
precis(m8, depth = 2)
precis_plot(precis(m8, depth = 2))
traceplot(m8)
precis(m8, depth = 2)
inv_logit(0.82)
inv_logit(0.8)
exp(0.99)
inv_logit(0.82)
inv_logit(0.08)
exp(0.99)
exp(1)
precis_plot(precis(m8, depth = 2))
m8 <- ulam(
alist(
herb ~ dzipois(p_zero, 100, lambda),
logit(lambda) <- b[species],
logit(p_zero) <- binom_herb[species],
# priors
b[species] ~ dnorm(1, 0.5),
binom_herb[species] ~ dnorm(2, 5),
), data = d_town_slim, log_lik = TRUE, chains = 4, cores = 4,
)
m8 <- ulam(
alist(
herb ~ dzipois(p_zero, 100, lambda),
logit(lambda) <- b[species],
logit(p_zero) <- binom_herb[species],
# priors
b[species] ~ dnorm(1, 0.5),
binom_herb[species] ~ dnorm(2, 5),
), data = d_town_slim, log_lik = TRUE, chains = 4, cores = 4,
)
m8 <- ulam(
alist(
herb ~ dzipois(p_zero, 100, lambda),
logit(lambda) <- b[species],
logit(p_zero) <- binom_herb[species],
# priors
b[species] ~ dnorm(1, 0.5),
binom_herb[species] ~ dnorm(2, 5)
), data = d_town_slim, log_lik = TRUE, chains = 4, cores = 4,
)
m8 <- ulam(
alist(
herb ~ dzipois(p_zero, 100, lambda),
logit(lambda) <- b[species],
logit(p_zero) <- binom_herb[species],
# priors
b[species] ~ dnorm(1, 0.5),
binom_herb[species] ~ dnorm(2, 5)
), data = d_town_slim, log_lik = TRUE, chains = 4, cores = 4,
)
precis(m8, depth = 2)
precis_plot(precis(m8, depth = 2))
traceplot(m8)
# m8 estimates
m8_fit <- m8@stanfit
posterior_m8 <- as.matrix(m8_fit)
params <- c(names(m8_fit)[grep("a", names(m8_fit))],
names(m8_fit)[grep("b", names(m8_fit))])
mcmc_areas(
posterior_m8,
pars = params,
prob = 0.8,
prob_outer = 0.999,
point_est = "mean"
) + ggtitle("m8 parameter estimates")
inv_logit(1.48)
inv_logit(0.75)
exp(0.99)
set.seed(1)
N <- 100
a <- rlnorm(N, 1, 0.5) # global average
b <- rlnorm(N, 0, 1.5) # species
g <- rlnorm(N, 2, 5) # site
plot(x = "species", y = "herb", data = d_town,
xlim = range(d_town$species),
ylim = c(-5, 100),
xlab = "species", ylab = "herb")
for(i in 1:N)
curve(a[i] + b[i]*x + g[i],
from = 1, to = 2, add = T,
col = col.alpha("black", 0.2))
N <- 100
a_bar <- rlnorm(1, 0.5)
sigma_a <- exp(1)
a <- rlnorm(N, a_bar, sigma_a)
b_bar <- rlnorm(0, 1.5)
b <- rlnorm(N, b_bar, 1.5)
sigma_g <- exp(1)
g <- rlnorm(N, 0, sigma_g)
plot(NULL, xlim = range(d_town_slim$species), ylim = c(-5, 100),
xlab = "species", ylab = "herb")
for(i in 1:N)
curve(a[i] + b[i]*x + c[i],
from = 1, to = 2, add = T,
col = col.alpha("black", 0.2))
N <- 100
a_bar <- rlnorm(1, 0.5)
sigma_a <- exp(1)
a <- rlnorm(N, a_bar, sigma_a)
b_bar <- rlnorm(0, 1.5)
b <- rlnorm(N, b_bar, 1.5)
sigma_g <- exp(1)
g <- rlnorm(N, 0, sigma_g)
plot(NULL, xlim = range(d_town_slim$species), ylim = c(-5, 100),
xlab = "species", ylab = "herb")
for(i in 1:N)
curve(a[i] + b[i]*x + c[i],
from = 1, to = 2, add = T,
col = col.alpha("black", 0.2))
set.seed(1)
N <- 100
a <- rlnorm(N, 1, 0.5) # global average
b <- rlnorm(N, 0, 1.5) # species
g <- rlnorm(N, 2, 5) # site
plot(x = "species", y = "herb", data = d_town,
xlim = range(d_town$species),
ylim = c(-5, 100),
xlab = "species", ylab = "herb")
for(i in 1:N)
curve(a[i] + b[i]*x + g[i],
from = 1, to = 2, add = T,
col = col.alpha("black", 0.2))
citr:::insert_citation()
